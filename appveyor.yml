build: off
version: 1.0.{build}

skip_branch_with_pr: true

init:

  - git config --global core.sharedRepository true
  - git config --global core.longpaths true
  - git config --global core.autocrlf input

environment:

  PYPI_VENDOR_DIR: '.\tests\pypi\'
  GIT_ASK_YESNO: 'false'
  SHELL: 'windows'
  PYTHON_ARCH: '64'
  PYTHONIOENCODING: 'utf-8'

  matrix:

    # - PYTHON: 'C:\Python27-x64'
    #   PYTHON_VERSION: '2.7.x'
    #   TEST_SUITE: 'not install'

    # - PYTHON: 'C:\Python27-x64'
    #   PYTHON_VERSION: '2.7.x'
    #   TEST_SUITE: 'install'
    #   PYTEST_ADDOPTS: '--cache-clear'
    #   RUN_INTEGRATION_TESTS: 'True'

    # - PYTHON: 'C:\Python36-x64'
    #   PYTHON_VERSION: '3.6.x'
    #   TEST_SUITE: 'not install'

    - PYTHON: 'C:\Python36-x64'
      PYTHON_VERSION: '3.6.x'
      TEST_SUITE: 'not install'

    # - PYTHON: 'C:\Python36-x64'
    #   PYTHON_VERSION: '3.6.x'
    #   TEST_SUITE: 'install'
    #   PYTEST_ADDOPTS: '--cache-clear'
    #   RUN_INTEGRATION_TESTS: 'True'

install:
  - 'set PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%'
  - '%PYTHON%\python.exe -m pip install --upgrade pip'
  - '%PYTHON%\python.exe -m pip install -e .'
  - '%PYTHON%\python.exe -m pipenv run pip install -e .'
  - '%PYTHON%\python.exe -m pipenv install --dev'
  - '%PYTHON%\python.exe -m pipenv --venv'
  - '%PYTHON%\python.exe -m pipenv --py'
  - '%PYTHON%\python.exe -m pipenv run python --version'

cache:
  - '%LocalAppData%\pip\cache'

test_script:
  - 'if "%RUN_INTEGRATION_TESTS%" == "True" (rmdir /s /q %LocalAppData%\pip\cache)'
  - '%PYTHON%\python.exe -m pipenv run pytest -v -n 4 -m "%TEST_SUITE%" tests'
